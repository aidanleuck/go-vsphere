package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.31

import (
	"context"
	"vsphere_module/src/graph/model"
)

// CreateJob is the resolver for the createJob field.
func (r *mutationResolver) CreateJob(ctx context.Context, input *model.JobInput) (string, error) {
	id, err := r.Service.Queue.AddJob(input)
	return *id, err
}

// FinishJob is the resolver for the finishJob field.
func (r *mutationResolver) FinishJob(ctx context.Context, input string) (*model.Job, error) {
	return r.Service.Queue.FinishJob(input)
}

// GetJob is the resolver for the getJob field.
func (r *queryResolver) GetJob(ctx context.Context, jobID string) (*model.Job, error) {
	return r.Service.Queue.GetJob(jobID)
}

// GetJobs is the resolver for the getJobs field.
func (r *queryResolver) GetJobs(ctx context.Context) ([]*model.Job, error) {
	return r.Service.Queue.GetAllJobs()
}

// GetJobsByStatus is the resolver for the getJobsByStatus field.
func (r *queryResolver) GetJobsByStatus(ctx context.Context, status model.JobStatus) ([]*model.Job, error) {
	return r.Service.Queue.GetJobsByStatus(status)
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
